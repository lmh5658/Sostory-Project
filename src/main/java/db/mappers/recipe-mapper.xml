<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<properties>
	<!-- 페이징 현재 레시피게시글 총 갯수-->
	<entry key="selectListCount">
		SELECT COUNT(*) AS count
	   	 FROM TB_RECIPE
		WHERE RECIPE_STATUS = 'Y' 
	</entry>
	
	<entry key="selectCategoryListCount">
		SELECT COUNT(*) AS count
	   	 FROM TB_RECIPE
		WHERE RECIPE_STATUS = 'Y'
		  AND CATEGORY_NO = ?
	</entry>
	
	<!-- 레시피게시글 목록 조회-->
	<entry key="selectRecipeList">
		SELECT *
		FROM (
		    SELECT ROWNUM RNUM, A.*
		    FROM (
		        SELECT
		            R.RECIPE_NO,
		            C.CATEGORY_NAME,
		            R.RECIPE_TITLE,
		            R.THUMBNAIL_URL,
		            R.RECIPE_INTRO,
		            M.USER_NAME,
		            M.USER_PATH,
		            COUNT(L.LIKE_REFNO) AS LIKE_COUNT,
		            P.PRODUCT_NAME,
		            P.PRICE,
		            P.DISCOUNT_PRICE,
		            P.PATH
		        FROM TB_RECIPE R
		       left JOIN TB_MEMBER M ON R.USER_NO = M.USER_NO
      		   left JOIN TB_PRODUCT P ON R.PRODUCT_NO = P.PRODUCT_NO
               left JOIN TB_LIKE L ON R.USER_NO = L.USER_NO
               left JOIN TB_CATEGORY C ON C.CATEGORY_NO = R.CATEGORY_NO
		        WHERE R.RECIPE_STATUS = 'Y' 
		        GROUP BY 
		            R.RECIPE_NO,
		            C.CATEGORY_NAME,
		            R.RECIPE_TITLE,
		            R.THUMBNAIL_URL,
		            R.RECIPE_INTRO,
		            M.USER_NAME,
		            P.PRODUCT_NAME,
		            P.PRICE,
		            P.DISCOUNT_PRICE,
		            P.PATH,
		            M.USER_PATH    
		            
		    ) A
		    ORDER BY A.LIKE_COUNT DESC
		)
		WHERE RNUM BETWEEN ? AND ?
			
	</entry>
	
	<!-- 카테고리 -->
	<entry key="selectCategoryList">
		SELECT *
		FROM (
		    SELECT ROWNUM RNUM, A.*
		    FROM (
		        SELECT
		            R.RECIPE_NO,
		            C.CATEGORY_NAME,
		            R.RECIPE_TITLE,
		            R.THUMBNAIL_URL,
		            R.RECIPE_INTRO,
		            M.USER_NAME,
		            M.USER_PATH,
		            COUNT(L.LIKE_REFNO) AS LIKE_COUNT,
		            P.PRODUCT_NAME,
		            P.PRICE,
		            P.DISCOUNT_PRICE,
		            P.PATH
		        FROM TB_RECIPE R
		       left JOIN TB_MEMBER M ON R.USER_NO = M.USER_NO
      		   left JOIN TB_PRODUCT P ON R.PRODUCT_NO = P.PRODUCT_NO
               left JOIN TB_LIKE L ON R.USER_NO = L.USER_NO
               left JOIN TB_CATEGORY C ON C.CATEGORY_NO = R.CATEGORY_NO
		        WHERE R.RECIPE_STATUS = 'Y'
		        	AND R.CATEGORY_NO = ? 
		        GROUP BY 
		            R.RECIPE_NO,
		            C.CATEGORY_NAME,
		            R.RECIPE_TITLE,
		            R.THUMBNAIL_URL,
		            R.RECIPE_INTRO,
		            M.USER_NAME,
		            P.PRODUCT_NAME,
		            P.PRICE,
		            P.DISCOUNT_PRICE,
		            P.PATH,
		            M.USER_PATH    
		            
		    ) A
		    ORDER BY LIKE_COUNT DESC
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	
	<!-- 레시피 검색 -->
	<entry key="SelectSearchList">
		SELECT *
		FROM (
		    SELECT ROWNUM RNUM, A.*
		    FROM (
		        SELECT
		            R.RECIPE_NO,
		            C.CATEGORY_NAME,
		            R.RECIPE_TITLE,
		            R.THUMBNAIL_URL,
		            R.RECIPE_INTRO,
		            M.USER_NAME,
		            M.USER_PATH,
		            COUNT(L.LIKE_REFNO) AS LIKE_COUNT,
		            P.PRODUCT_NAME,
		            P.PRICE,
		            P.DISCOUNT_PRICE,
		            P.PATH
		        FROM TB_RECIPE R
		       left JOIN TB_MEMBER M ON R.USER_NO = M.USER_NO
      		   left JOIN TB_PRODUCT P ON R.PRODUCT_NO = P.PRODUCT_NO
               left JOIN TB_LIKE L ON R.USER_NO = L.USER_NO
               left JOIN TB_CATEGORY C ON C.CATEGORY_NO = R.CATEGORY_NO
		        WHERE R.RECIPE_STATUS = 'Y'
		        	AND RECIPE_TITLE LIKE '%'|| ? ||'%'
		        GROUP BY 
		            R.RECIPE_NO,
		            C.CATEGORY_NAME,
		            R.RECIPE_TITLE,
		            R.THUMBNAIL_URL,
		            R.RECIPE_INTRO,
		            M.USER_NAME,
		            P.PRODUCT_NAME,
		            P.PRICE,
		            P.DISCOUNT_PRICE,
		            P.PATH,
		            M.USER_PATH    
		            
		    ) A
		    ORDER BY LIKE_COUNT DESC
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 레시피 상세 조회 -->
	<entry key="selectDetailRecipe">
	SELECT A.*
		    FROM (
		        SELECT
		            R.RECIPE_NO,
		            C.CATEGORY_NAME,
		            R.RECIPE_TITLE,
		            R.THUMBNAIL_URL,
		            R.RECIPE_INTRO,
		            R.DIFFICULTY,
		            R.SERVING,
		            R.COOKING_TIME,
		            M.USER_NAME,
		            M.USER_PATH,
		            COUNT(L.LIKE_REFNO) AS LIKE_COUNT,
		            P.PRODUCT_NAME,
		            P.PRICE,
		            P.DISCOUNT_PRICE,
		            P.PATH
		        FROM TB_RECIPE R
		       left JOIN TB_MEMBER M ON R.USER_NO = M.USER_NO
      		   left JOIN TB_PRODUCT P ON R.PRODUCT_NO = P.PRODUCT_NO
               left JOIN TB_LIKE L ON R.USER_NO = L.USER_NO
               left JOIN TB_CATEGORY C ON C.CATEGORY_NO = R.CATEGORY_NO
		        WHERE R.RECIPE_STATUS = 'Y'
		        GROUP BY 
		            R.RECIPE_NO,
		            C.CATEGORY_NAME,
		            R.RECIPE_TITLE,
		            R.THUMBNAIL_URL,
		            R.DIFFICULTY,
		            R.SERVING,
		            R.COOKING_TIME,
		            R.RECIPE_INTRO,
		            M.USER_NAME,
		            P.PRODUCT_NAME,
		            P.PRICE,
		            P.DISCOUNT_PRICE,
		            P.PATH,
		            M.USER_PATH
			    ) A
   		 WHERE RECIPE_NO = ?
    </entry>
    
    <!-- 레시피 상세 재료 ->총수로 SIZR값 가져와서 FOR문 돌리기? -->
    <entry key="selectIngridient">

		      SELECT R.RECIPE_NO, RI.INGREDIENT_NAME, RI.INGREDIENT_AMOUNT, A.INGREDIENT_COUNT
			      FROM (
			          SELECT R.RECIPE_NO, COUNT(*) AS INGREDIENT_COUNT
			          FROM TB_RECIPE_INGREDIENT RI
			          JOIN TB_RECIPE R ON RI.RECIPE_NO = R.RECIPE_NO
			          WHERE R.RECIPE_STATUS = 'Y' AND R.RECIPE_NO = ?
			          GROUP BY R.RECIPE_NO 
			      ) A
			      JOIN TB_RECIPE R ON R.RECIPE_NO = A.RECIPE_NO
			      JOIN TB_RECIPE_INGREDIENT RI ON RI.RECIPE_NO = A.RECIPE_NO
		
    </entry>
    
    <!-- 레시피 상세 STEP ->레시피 넘버인 값으로 찾아서 1인 것들만. 스텝 노.size 기준으로 +1 for문  -->
    <entry key="selectStep">
	   SELECT R.RECIPE_NO, RS.STEP_NO, RS.STEP_CONTENT, RS.STEP_ATTACHMENT_URL, A.STEP_COUNT
		FROM (
		    SELECT R.RECIPE_NO, COUNT(*) AS STEP_COUNT
		    FROM TB_RECIPE R
		    JOIN TB_RECIPE_STEP RS ON RS.RECIPE_NO = R.RECIPE_NO
		    WHERE RS.STEP_STATUS ='Y' and R.RECIPE_NO= ?
		    GROUP BY R.RECIPE_NO
		) A
		JOIN TB_RECIPE R ON R.RECIPE_NO = A.RECIPE_NO
		JOIN TB_RECIPE_STEP RS ON RS.RECIPE_NO = R.RECIPE_NO
    </entry>
    
    
    <!-- 레시피 등록 - 구매확정 상품목록 가져오는 쿼리문 -->
      <entry key="selectOrderProduct">
      SELECT P.PRODUCT_NAME
		FROM TB_PRODUCT P
		JOIN TB_ORDER_PRODUCT OP ON (OP.PRODUCT_NO = P.PRODUCT_NO)
		JOIN TB_ORDER O ON (O.ORDER_NO = OP.ORDER_NO)
	 WHERE ORDER_STATUS = 4 AND USER_NO = ?
      </entry>


	<!-- 등록 - 재료--> --뭔가 이상함
   <!--  <entry key="insertIngredientList">
	 INSERT
		  INTO TB_RECIPE_INGREDIENT
		  (
		    RECIPE_NO
		  , INGREDIENT_NAME
		  , INGREDIENT_AMOUNT
		  )
		  VALUES
		  (
		  , ?
		  , ?
		  , ?
		  )
	</entry>
		  -->
		  
	
	<!-- 등록 - step -->
	<entry key="insertStepList">
	  INSERT
		  INTO TB_RECIPE_STEP
		  (
		    RECIPE_NO
		  , STEP_NO 
		  , STEP_CONTENT
		  , STEP_ATTACHMENT_URL
		  )
		  VALUES
		  (
		    SEQ_RSNO .NEXTVAL
		  , ?
		  , ?
		  , ?
		  , ?
		  )
	
	</entry>
</properties>